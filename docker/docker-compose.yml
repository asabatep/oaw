version: '2.2'

services:

    renderer:
      privileged: true
      build: ./renderer
      image: oawjs_renderer
      scale: 3
      cpus: 2
      restart: always
      command: node /opt/prerender/server.js
      
    proxy:
      build: ./proxy      
      image: oawjs_proxy
      command: node /opt/proxy/index.js
      restart: always
      ports:
        - "18088:18088"        
      container_name: oaw_proxy   

    nginx:
      image: nginx:1.13.8-alpine      
      volumes:
        - ./nginx/reverse.conf:/etc/nginx/conf.d/default.conf
        - ./nginx/certs/server.crt:/etc/nginx/ssl/server.crt
        - ./nginx/certs/server.key:/etc/nginx/ssl/server.key        
      links:
        - renderer
      restart: always
      shm_size: '1gb'
      container_name: oaw_nginx

    mysql:
      image: mysql:5.7.21
      command: --max_allowed_packet=32505856   
      ports:
        - "55306:3306"   
      environment:
        MYSQL_ROOT_PASSWORD: root
      volumes:
        # Si se coloca un fichero .sql.gz en la ruta del cointainer indicada
        # se lanzará el script contenido al inicializar la base de datos.
        # Comentar esta línea si no es necesaria
        - "./mysql/01_schema.sql:/docker-entrypoint-initdb.d/01_schema.sql"
        - "./mysql/02_data.sql:/docker-entrypoint-initdb.d/02_data.sql"
        - "./mysql/03_data.sql:/docker-entrypoint-initdb.d/03_data.sql"
        - "./mysql/04_data.sql:/docker-entrypoint-initdb.d/04_data.sql"
        - "./volumes/mysql/:/var/lib/mysql/"
      container_name: oaw_mysql

    tomcat:
      build: ./tomcat 
      ports:
        - "18081:8080" 
        - "18444:8443"
      volumes:
        - "../portal/target/oaw.war:/usr/local/tomcat/webapps/oaw.war" 
        - "./tmp:/tmp"
      dns:
        - 192.168.4.9
        - 192.168.4.10
      links:
        - mysql
      restart: always    
      container_name: oaw_tomcat
